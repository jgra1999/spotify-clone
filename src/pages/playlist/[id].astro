---
import MusicTable from '@/components/music-table.astro';
import Layout from '../../layouts/Layout.astro';

import { allPlaylists, songs } from '@/libs/data';
import { CardPlayButton } from '@/components/playlists/card-play-button';

const {id} = Astro.params

const playlists = allPlaylists.find((playlist) => playlist.id === id)
const playlistSongs = songs.filter(song => song.albumId === playlists?.albumId)
---

<Layout title="Spotify Clone">
	<div
	  id="playlist-container"
	  class="relative flex flex-col h-full bg-zinc-900 overflow-x-hidden"
	  transition:name={`playlist ${id} box`}>
		<!-- Page Header -->

		<header class="flex flex-col gap-y-5 px-6 mt-12">
			<div class="flex gap-8">
				<picture class="aspect-square w-52 h-52 flex-none">
					<img
					  src={playlists?.cover}
					  alt={`Cover of ${playlists?.title}`}
					  class="object-cover h-full w-full rounded-md shadow-lg"
					  transition:name={`playlist ${playlists?.id} image`}
					/>
				  </picture>
				
				<div class="flex flex-col justify-between">
					<h2 class="flex flex-1 items-end">Playlist</h2>
					<div>
					  <h1 class="text-5xl font-bold block text-white">
						{playlists?.title}
						<span transition:name=`playlist ${playlists?.id} title`></span>
					  </h1>
					</div>
				
					<div class="flex-1 flex items-end">
					  <div class="text-sm text-gray-300 font-normal">
						<div transition:name=`playlist ${playlists?.id} artists`>
						  <span>{playlists?.artists.join(", ")}</span>
						</div>
						<p class="mt-1">
						  <span class="text-white">{playlistSongs.length} canciones</span>,
						  3 h aproximadamente
						</p>
					  </div>
					</div>
				</div>
			</div>
			<div>
			<CardPlayButton id={id} size='large' client:visible/>
			</div>
		</header>


		<div class="relative z-10 pt-10 px-6"></div>
		<div class="absolute inset-0 bg-gradient-to-t from-darkGray via-zinc-900/80 -z-10" ></div>

		<section class="px-6">
			<MusicTable songs={playlistSongs} />
		</section>
	</div>
</Layout>

